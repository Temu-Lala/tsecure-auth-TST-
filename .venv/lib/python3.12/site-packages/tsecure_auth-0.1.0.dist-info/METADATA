Metadata-Version: 2.3
Name: tsecure-auth
Version: 0.1.0
Summary: A secure, modern, and developer-friendly authentication system for Python applications.
Author: Temesgen Debebe
Author-email: temesgendebebe1921@gmail.com
Requires-Python: >=3.9,<4.0
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Requires-Dist: asyncpg (>=0.29.0,<0.30.0)
Requires-Dist: cryptography (>=42.0.5,<43.0.0)
Requires-Dist: fastapi (>=0.110.0,<0.111.0)
Requires-Dist: passlib[bcrypt] (>=1.7.4,<2.0.0)
Requires-Dist: psycopg2-binary (>=2.9.9,<3.0.0)
Requires-Dist: pydantic (>=2.6.4,<3.0.0)
Requires-Dist: python-multipart (>=0.0.9,<0.0.10)
Requires-Dist: sqlalchemy (>=2.0.28,<3.0.0)
Description-Content-Type: text/markdown

# T-SecureAuth (TST)

**Next-Generation Python Authentication System**

T-SecureAuth (TST) is a modern, secure, and developer-friendly authentication package for Python web backends. It goes beyond JWT by using AES-256-GCM encrypted tokens, rolling/rotating tokens, context-aware validation, threat detection, and more. TST is framework-agnostic and works with FastAPI, Flask, Django, and any ASGI/WGI backend.

---

## Features
- 🔒 **AES-256 Encrypted Tokens** (TST format, not JWT)
- 🔁 **Rotating & Revokable Tokens** (access/refresh)
- 🧠 **Context-Aware Validation** (IP/device fingerprint)
- 🚨 **Threat Detection** (brute force, token reuse, tampering)
- 📊 **Real-time Monitoring Dashboard** (API endpoints)
- 🧩 **Customizable User Model & Token Payload**
- ⚡ **Fast, Lightweight, and Developer-Friendly**
- 🛡️ **RBAC (Role-Based Access Control)**
- 🔌 **Framework Agnostic** (works with FastAPI, Flask, Django, etc.)

---

## Installation

```bash
pip install TST
```

Or, for local development:

```bash
pip install -e .
```

---

## Quick Start (FastAPI Example)

```python
from fastapi import FastAPI
from tsecure_auth.core.config import init_auth
from tsecure_auth.routes.auth import create_auth_router

init_auth({
    "ENCRYPTION_KEY": "your-32-byte-secret-key",
    "USER_MODEL_FIELDS": ["username", "email", "password", "role"], // make your model as you went customize
    "TOKEN_PAYLOAD_FIELDS": ["id", "username", "email", "role"], // make your model as you went customize 
    "VALIDATE_IP": False ,  // allow and revock users access in multiple device  if it is true only one device access 
    "VALIDATE_USER_AGENT": False , // allow and revock users access in multiple device  if it is true only one device access 

})

app = FastAPI()
app.include_router(create_auth_router(), prefix="/auth")
```

---

## Documentation
- [API Reference](#)
- [Advanced Usage](#)
- [Integrations](#)

---

## License

This project is licensed under the MIT License. See [LICENSE](LICENSE) for details.

